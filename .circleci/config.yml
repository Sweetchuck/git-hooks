
version: 2.1

.env_app: &env_app
    APP_COMPOSER_VERSION: '2.1.5'
    APP_COMPOSER_HASH: '756890a4488ce9024fc62c56153228907f1545c228516cbf63f885e036d37e9a59d27d63f46af1d4d07ee0f76181c7d3'
    SHELL: '/bin/bash'

.env_composer: &env_composer
    COMPOSER_NO_INTERACTION: '1'
    COMPOSER_MEMORY_LIMIT: '-1'
    COMPOSER_DISABLE_XDEBUG_WARN: '1'

orbs:
    codecov: 'codecov/codecov@1.2.0'

executors:
    php800:
        environment:
            <<: *env_app
            <<: *env_composer

        docker:
            -
                name: 'main'
                image: 'circleci/php:8.0'

    php704:
        environment:
            <<: *env_app
            <<: *env_composer

        docker:
            -
                name: 'main'
                image: 'circleci/php:7.4'

commands:
    install_composer:
        description: 'Install Composer CLI tool'
        steps:
            -
                run:
                    name: ''
                    command: |4
                        mkdir -p "${HOME}/.local/bin"
                        php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
                        php -r "if (hash_file('sha384', 'composer-setup.php') === getenv('APP_COMPOSER_HASH')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
                        php composer-setup.php \
                            --filename    'composer' \
                            --install-dir "${HOME}/.local/bin" \
                            --version     "${APP_COMPOSER_VERSION}"
                        php -r "unlink('composer-setup.php');"
                        whereis composer
                        which composer
                        type composer
                        composer --version

    composer_install:
        description: 'Install Composer dependencies with cache restore and save'
        steps:
            -
                restore_cache:
                    name: 'Composer - cache restore'
                    keys:
                        - 'composer-{{ checksum "./composer.lock" }}-2'

            -
                run:
                    name: 'Composer - install'
                    command: >
                        composer install --no-progress --ansi

            -
                save_cache:
                    name: 'Composer - cache save'
                    key: 'composer-{{ checksum "./composer.lock" }}-2'
                    paths:
                        - '~/.composer/cache/'


    lint:
        description: 'Run linters'
        steps:
            -
                run:
                    name: 'Run linters'
                    command: 'bin/robo  --ansi lint'

    test:
        description: 'Run tests'
        steps:
            -
                run:
                    name: 'Codeception - unit'
                    command: 'bin/robo --ansi test unit'
            -   codecov/upload:
                    flags: 'unit'
                    file: './tests/_output/machine/coverage/unit/coverage.xml'
            -   run:
                    name: 'Codeception - acceptance'
                    command: 'bin/robo --ansi test acceptance'
            -   codecov/upload:
                    flags: 'acceptance'
                    file: './tests/_output/machine/coverage/acceptance/coverage.xml'
            -   store_test_results:
                    name: 'Store unit test results'
                    path: './tests/_output/machine/junit'

jobs:
    build:
        executor: 'php704'
        working_directory: '~/repo'
        steps:
            - 'checkout'
            - 'composer_install'
    lint:
        executor: 'php704'
        working_directory: '~/repo'
        steps:
            - 'checkout'
            - 'composer_install'
            - 'lint'
    test_php800:
        executor: 'php800'
        working_directory: '~/repo'
        steps:
            - 'checkout'
            - 'composer_install'
            - 'test'
    test_php704:
        executor: 'php704'
        working_directory: '~/repo'
        steps:
            - 'checkout'
            - 'composer_install'
            - 'test'

workflows:
    lint_and_test:
        jobs:
            -
                build: {}
            -
                lint:
                    requires:
                        - build
            -
                test_php800:
                    requires:
                        - build
            -
                test_php704:
                    requires:
                        - build
